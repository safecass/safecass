#------------------------------------------------------------------------
#
# CASROS: Component-based Architecture for Safe Robotic Systems
#
# Copyright (C) 2012-2014 Min Yang Jung, Peter Kazanzides
#
#------------------------------------------------------------------------
#
# Created on   : Oct 25, 2012
# Last revision: Jul 24, 2014
# Author       : Min Yang Jung (myj@jhu.edu)
# Github       : https://github.com/minyang/casros
#
# Version
set (SF_VERSION_MAJOR "@SF_VERSION_MAJOR@")
set (SF_VERSION_MINOR "@SF_VERSION_MINOR@")
set (SF_VERSION_PATCH "@SF_VERSION_PATCH@")
set (SF_VERSION       "@SF_VERSION@")

# Component-based framework
set (SF_HAS_CISST "@SF_HAS_CISST@")

# Paths
set (SF_BUILD_ROOT            "@SF_BUILD_ROOT@")
set (SF_BUILD_EXECUTABLE_PATH "@EXECUTABLE_OUTPUT_PATH@")
set (SF_BUILD_LIBRARY_DIR     "@LIBRARY_OUTPUT_PATH@")

# For external project that uses SF
set (SF_SOURCE_DIR  "@SF_SOURCE_DIR@")
set (SF_LIBRARY_DIR "@SF_LIBRARY_DIR@")
set (SF_INCLUDE_DIR "@SF_INCLUDE_DIR@")
set (SF_CMAKE_MODULE_PATH "@SF_CMAKE_MODULE_PATH@")

# External dependencies of CASROS
set (SF_BUILD_SHARED_LIBS          "@BUILD_SHARED_LIBS@")
set (SF_LIB_DEPENDENCY_LIBS        "@SF_LIB_DEPENDENCY_LIBS@")
set (SF_LIB_DEPENDENCY_INCLUDE_DIR "@SF_LIB_INCLUDE_DIR@")

# Logger option
set (SF_USE_G2LOG "@SF_USE_G2LOG@")

# locate cisst use file
find_file (SF_USE_FILE UseSF.cmake ${SF_CMAKE_MODULE_PATH})

# Compiler options (e.g., g2log requires c++11 standard)
set (SF_CXX_FLAGS "@SF_CXX_FLAGS@")

# On Windows, CMake uses a different compiler at configuration time
#set (CISST_CMAKE_COMPILER_IS_MSVC_64 @CISST_CMAKE_COMPILER_IS_MSVC_64@)

# Which flags have been set and include path/libs
#set (CISST_HAS_SAFETY_PLUGINS @CISST_HAS_SAFETY_PLUGINS@)
